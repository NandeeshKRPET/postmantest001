{
	"info": {
		"_postman_id": "7d523a78-ea7f-43ac-82c5-67b64c75f926",
		"name": "ShopperEndToEnd",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32534236"
	},
	"item": [
		{
			"name": "Profile",
			"item": [
				{
					"name": "Shopper Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"body = JSON.parse(responseBody)\r",
									"\r",
									"console.log(body.data.userId)\r",
									"\r",
									"\r",
									"pm.environment.set(\"shopperId\", body.data.userId);\r",
									"pm.environment.set(\"jwtToken\", body.data.jwtToken);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"nandi.kshankar@gmail.com\",\r\n  \"password\": \"Nandi@123\",\r\n  \"role\": \"SHOPPER\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product View Action",
			"item": [
				{
					"name": "Get All Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"body = JSON.parse(responseBody)\r",
									"pm.environment.set(\"productId\", body.data[2].productId);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Response time is less than 900ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/products/alpha",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"products",
								"alpha"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "WishList",
			"item": [
				{
					"name": "Add Product To WishList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": \"{{productId}}\",\r\n  \"quantity\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/shoppers/{{shopperId}}/wishlist/{{productId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"wishlist",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Products From WishList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name is OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/shoppers/{{shopperId}}/wishlist",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"wishlist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product From WishList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Status code name is No Content\", function () {\r",
									"    pm.response.to.have.status(\"No Content\");\r",
									"});\r",
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/shoppers/{{shopperId}}/wishlist/{{productId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"wishlist",
								"{{productId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Address",
			"item": [
				{
					"name": "Add New Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"body = JSON.parse(responseBody)\r",
									"pm.environment.set(\"addressId\", body.data.addressId);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"addressId\": 1,\r\n  \"buildingInfo\": \"#3 2nd Street\",\r\n  \"city\": \"Bengaluru\",\r\n  \"country\": \"India\",\r\n  \"landmark\": \"Vijayanagar\",\r\n  \"name\": \"Nandeesh KS\",\r\n  \"phone\": \"9876545678\",\r\n  \"pincode\": \"560010\",\r\n  \"state\": \"Karnataka\",\r\n  \"streetInfo\": \"2nd Street\",\r\n  \"type\": \"Home\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/shoppers/{{shopperId}}/address",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"address"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// pm.test(\"Your test name\", function () {\r",
									"//     var jsonData = pm.response.json();\r",
									"//     pm.expect(jsonData.data.addressId).to.eql(\"{{addressId}}\");\r",
									"// });\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/shoppers/{{shopperId}}/address/{{addressId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"address",
								"{{addressId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Response time is less than 800ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"addressId\": {{addressId}},\r\n  \"buildingInfo\": \"#3 2nd Street\",\r\n  \"city\": \"Bengaluru\",\r\n  \"country\": \"India\",\r\n  \"landmark\": \"Updated Vijayanagar\",\r\n  \"name\": \"Nandeesh KS\",\r\n  \"phone\": \"9876545678\",\r\n  \"pincode\": \"560010\",\r\n  \"state\": \"Karnataka\",\r\n  \"streetInfo\": \"2nd Street\",\r\n  \"type\": \"Home\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/shoppers/{{shopperId}}/address/{{addressId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"address",
								"{{addressId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Addresses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/shoppers/{{shopperId}}/address",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"address"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cart",
			"item": [
				{
					"name": "Add Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"pm.test(\"Response time is less than 800ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});\r",
									"\r",
									"body = JSON.parse(responseBody);\r",
									"pm.environment.set(\"itemId\", body.data.itemId);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": \"{{productId}}\",\r\n  \"quantity\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/shoppers/{{shopperId}}/carts",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Response time is less than 800ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/shoppers/{{shopperId}}/carts",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Response time is less than 800ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": \"{{productId}}\",\r\n  \"quantity\": 3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/shoppers/{{shopperId}}/carts/{{itemId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"carts",
								"{{itemId}}"
							]
						}
					},
					"response": [
						{
							"name": "Update Product",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"productId\": \"{{productId}}\",\r\n  \"quantity\": 3\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/shoppers/{{shopperId}}/carts/{{itemId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"shoppers",
										"{{shopperId}}",
										"carts",
										"{{itemId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Tue, 06 Feb 2024 07:12:01 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 200,\n    \"message\": \"Data Updated\",\n    \"data\": {\n        \"itemId\": 86296,\n        \"productId\": 7,\n        \"quantity\": 3,\n        \"productName\": \"Levis Mens Regular Fit Tee\",\n        \"imageLink\": \"https://rukminim1.flixcart.com/image/452/542/l4zxn680/t-shirt/m/g/e/-original-imagfrzgbzggz6vh.jpeg?q=50\",\n        \"price\": 0,\n        \"productLink\": \"/products/7\"\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Order",
			"item": [
				{
					"name": "Place Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"body = JSON.parse(responseBody);\r",
									"pm.environment.set(\"orderId\", body.data.orderId);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Status code name has Created\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"address\" : {\r\n  \"addressId\": \"{{addressId}}\",\r\n  \"buildingInfo\": \"string\",\r\n    \"city\": \"string\",\r\n    \"country\": \"string\",\r\n    \"landmark\": \"string\",\r\n    \"name\": \"string\",\r\n    \"phone\": \"string\",\r\n    \"pincode\": \"string\",\r\n    \"state\": \"string\",\r\n    \"streetInfo\": \"string\",\r\n    \"type\": \"string\"\r\n},\r\n\"paymentMode\" :\"COD\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/shoppers/{{shopperId}}/orders",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Display Order History",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}//shoppers/{{shopperId}}/orders",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"",
								"shoppers",
								"{{shopperId}}",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Order Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 800ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/shoppers/{{shopperId}}/orders/{{orderId}}?status=DELIVERED",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"orders",
								"{{orderId}}"
							],
							"query": [
								{
									"key": "status",
									"value": "DELIVERED"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate Invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 800ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/shoppers/{{shopperId}}/orders/{{orderId}}/invoice",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"orders",
								"{{orderId}}",
								"invoice"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product Review",
			"item": [
				{
					"name": "Create Review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"body = JSON.parse(responseBody);\r",
									"pm.environment.set(\"reviewId\", body.data.reviewId);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"description\": \"New Product Review\",\r\n  \"heading\": \"HI NICE PRODUCT\",\r\n  \"rating\": 5,\r\n  \"shopperId\": \"{{shopperId}}\",\r\n  \"shopperName\": \"Nandeesh K Shankar\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/reviews?productId={{productId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"reviews"
							],
							"query": [
								{
									"key": "productId",
									"value": "{{productId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product Reviews",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Response time is less than 800ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/reviews/{{productId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"reviews",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"description\": \"Updated Review\",\r\n  \"heading\": \"HI Hello New Updated Review\",\r\n  \"rating\": 5,\r\n  \"shopperId\": \"{{shopperId}}\",\r\n  \"shopperName\": \"Nandeesh K Shankar\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/reviews/{{reviewId}}?productId={{productId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"reviews",
								"{{reviewId}}"
							],
							"query": [
								{
									"key": "productId",
									"value": "{{productId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/reviews/{{reviewId}}?productId={{productId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"reviews",
								"{{reviewId}}"
							],
							"query": [
								{
									"key": "productId",
									"value": "{{productId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}